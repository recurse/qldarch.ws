@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix qldarch: <http://qldarch.net/ns/rdf/2012-06/terms#> .
@prefix qaat: <http://qldarch.net/ns/omeka/2012-11/auxterms#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "com.mysql.jdbc.Driver";
	d2rq:jdbcDSN "jdbc:mysql://localhost/omeka";
	d2rq:username "omeka";
	d2rq:password "qld4rch!";
	jdbc:autoReconnect "true";
	jdbc:zeroDateTimeBehavior "convertToNull";
	.

# Digital Items
map:digitalObjects a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:DigitalObject;
    d2rq:containsDuplicates "true";
    .
map:spreadsheets a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Spreadsheet;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Spreadsheet'"
    .
map:movingImages a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:MovingImage;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Moving Image'"
    .
map:interviews a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Interview;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Interview'"
    .
map:transcripts a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Transcript;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Transcript'"
    .
map:sounds a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Sound;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Sound'"
    .
map:photographs a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Photograph;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Photograph'"
    .
map:articles a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:Article;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Article'"
    .
map:lineDrawings a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "http://qldarch.net/omeka/items/show/@@o_items.id@@";
	d2rq:class qldarch:LineDrawing;
    d2rq:containsDuplicates "true";
    d2rq:join "o_item_types.id <= o_items.item_type_id";
    d2rq:condition "o_item_types.name='Line Drawing'"
    .

# Controlled Vocabulary Instances
map:pseudoEntities a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:PseudoEntity;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:pseudoEntityLabels a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:pseudoEntities;
    d2rq:property qaat:label;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.id = o_simple_vocab_terms.element_id"
    .
map:creators a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class foaf:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Creator'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:formats a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:Format;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Format'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:subjects a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:Subject;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Subject'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:drawingTypes a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:DrawingType;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Drawing Type'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:projectNames a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qaat:ProjectName;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Project Name'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:contemporaryFirms a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:Firm;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Contemporary Firm'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:buildingTypologies a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:BuildingTypology;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Building Typology'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:interviewers a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:Interviewer;
	d2rq:class qldarch:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Interviewer'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:interviewees a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:Interviewee;
	d2rq:class qldarch:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Interviewee'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .
map:transcribers a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_elements.name|urlencode@@,@@o_element_texts.text|urlencode@@";
	d2rq:class qldarch:Transcriber;
	d2rq:class qldarch:Person;
    d2rq:containsDuplicates "true";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_elements.id <= o_simple_vocab_terms.element_id";
    d2rq:condition "o_elements.name='Transcriber'";
    d2rq:condition "o_simple_vocab_terms.terms != ''"
    .

# Item meta-metadata
map:submitters a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://qldarch.net/ns/omeka/2012-11/pseudoentity#@@o_entities.email|urlencode@@";
    d2rq:class foaf:Person;
    d2rq:class qaat:PseudoEntity
    .
map:dateSubmitted a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:dateSubmitted;
    d2rq:datatype xsd:date;
    d2rq:column "o_items.modified"
    .
map:originalFilename a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:sourceFilename;
    d2rq:datatype xsd:string;
    d2rq:column "o_files.original_filename";
    d2rq:join "o_items.id <= o_files.item_id"
    .
map:systemFilename a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:systemLocation;
    d2rq:datatype xsd:string;
    d2rq:column "o_files.archive_filename";
    d2rq:join "o_items.id <= o_files.item_id"
    .
map:systemFilename a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:systemLocation;
    d2rq:datatype xsd:string;
    d2rq:column "o_files.archive_filename";
    d2rq:join "o_items.id <= o_files.item_id"
    .

# Dublin Core Metadata
map:title a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:title;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Title'"
    .
map:description a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:description;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Description'"
    .
map:creator a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:creator;
    d2rq:refersToClassMap map:creators;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Creator'"
    .
map:dateCreated a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:created;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Dublin Core'";
    d2rq:condition "o_elements.name='Date Created'"
    .
map:rights a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:rights;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Rights'"
    .
map:externalIdentifier a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:identifier;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='External Identifier'"
    .

# Controlled Vocabs Metadata
map:interviewer a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:interviewer;
    d2rq:refersToClassMap map:interviewers;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Interviewer'"
    .
map:interviewee a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:interviewee;
    d2rq:refersToClassMap map:interviewers;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Interviewee'"
    .
map:format a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property dcterms:format;
    d2rq:refersToClassMap map:formats;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Format'"
    .
map:transcriber a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:transcriber;
    d2rq:refersToClassMap map:transcribers;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Transcriber'"
    .
map:hasSubject a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:hasSubject;
    d2rq:refersToClassMap map:subjects;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Subject'"
    .
map:contemporaryFirm a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:contemporaryFirm;
    d2rq:refersToClassMap map:contemporaryFirms;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Contemporary Firm'"
    .
map:drawingType a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:drawingType;
    d2rq:refersToClassMap map:drawingTypes;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Drawing Type'"
    .
map:buildingTypology a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:buildingTypology;
    d2rq:refersToClassMap map:buildingTypologies;
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Drawing Type'"
    .

# Item Metadata Types
map:photographer a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:photographer;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Photographer'"
    .
map:datePhotographed a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:datePhotographed;
    d2rq:datatype xsd:date;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Photograph Date'"
    .
map:location a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:location;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Location'"
    .
map:externalLocation a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:externalLocation;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='External Location'"
    .
map:transcriptLocation a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qldarch:transcriptLocation;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Transcript Location'"
    .
map:periodical a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:periodical;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Title of the periodical'"
    .
map:volume a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:volume;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Volume'"
    .
map:issue a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:issue;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Issue'"
    .
map:datePublished a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:datePublished;
    d2rq:datatype xsd:date;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Publication Date'"
    .
map:pageNumbers a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:pageNumbers;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Page numbers'"
    .
map:projectNumber a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:projectNumber;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Project number'"
    .
map:originalCreationDate a d2rq:PropertyBridge;
	d2rq:dataStorage map:database;
    d2rq:belongsToClassMap map:digitalObjects;
    d2rq:property qaat:dateOriginalCreation;
    d2rq:datatype xsd:string;
    d2rq:column "o_element_texts.text";
    d2rq:join "o_elements.id <= o_element_texts.element_id";
    d2rq:join "o_items.id <= o_element_texts.record_id";
    d2rq:join "o_element_sets.id <= o_elements.element_set_id";
    d2rq:condition "o_element_sets.name='Item Type Metadata'";
    d2rq:condition "o_elements.name='Original Creation Date'"
    .
